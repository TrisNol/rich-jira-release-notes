[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.poetry]
authors = []
description = ""
license = "MIT"
name = "rich-jira-release-notes"
readme = "./docs/README.md"
version = "0.2.0-rc.2"

[tool.poetry.dependencies]
beautifulsoup4 = "^4.12.3"
jinja2 = "^3.1.5"
loguru = "^0.7.3"
markdownify = "^0.14.1"
pydantic = "^2.10.6"
python = "^3.12"
python-dotenv = "^1.0.1"
requests = "^2.32.3"
setuptools = "^75.6.0"
typer = "^0.15.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"
python-semantic-release = "^9.19.1"
types-requests = "^2.32.0.20241016"

[tool.poetry.group.docs.dependencies]
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.1"
mkdocs-material = "^9.6.4"
mkdocs-section-index = "^0.3.9"
mkdocstrings-python = "^1.15.0"

[tool.poetry.scripts]
rich-jira-release-notes = "rich_jira_release_notes.main:app"

[tool.semantic_release]
allow_zero_version = true
assets = []
build_command = "pip install poetry && poetry install && poetry build"
build_command_env = []
commit_message = "chore(release): v{version} [skip ci]"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
no_git_verify = false
tag_format = "v{version}"
version_toml = [
  "pyproject.toml:tool.poetry.version"
]
version_variables = ["src/rich_jira_release_notes/main.py:__version__"]

[tool.semantic_release.branches.develop]
match = "develop"
prerelease = true
prerelease_token = "rc"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
exclude_commit_patterns = []
insertion_flag = "<!-- version list -->"
mode = "init"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "./docs/CHANGELOG.md"
mask_initial_release = false
output_format = "md"

[tool.semantic_release.changelog.environment]
autoescape = false
block_end_string = "%}"
block_start_string = "{%"
comment_end_string = "#}"
comment_start_string = "{#"
extensions = []
keep_trailing_newline = false
lstrip_blocks = false
newline_sequence = "\n"
trim_blocks = false
variable_end_string = "}}"
variable_start_string = "{{"

[tool.semantic_release.commit_author]
default = "semantic-release <semantic-release>"
env = "GIT_COMMIT_AUTHOR"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
minor_tags = ["feat"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.semantic_release.remote]
ignore_token_for_push = false
insecure = false
name = "origin"
type = "github"

[tool.semantic_release.remote.token]
env = "github_token"
